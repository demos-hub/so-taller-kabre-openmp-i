/* compilation: gcc file.c -o out -fopenmp */


/* ===========================PRAGMAS=======================*/

/* Clauses: */
/* private, firstprivate, default, shared, copyin y reduction*/


/* DEFINE THE PARALLEL SECTION */
#pragma omp parallel [clauses]
// #pragma omp parallel private(n, m) /*n and m are variables*/


/* DEFINE PARALLEL FOR LOOP */
#pragma omp parallel for [clauses]


/* DEFINE A CRITICAL SECTION - ASSERT MUTUAL EXCLUSION*/
#pragma omp critical


/* MASTER THREAD WAITS FOR ALL THREADS*/
#pragma omp barrier


/* ===========================RUTINES=======================*/


/* SET THE NUMBER OF THREADS */
void omp_set_num_threads(int num_threads);

/* GETS NUMBER OF THREADS IN THE CURRENT TEAM*/
int omp_get_num_threads(void);

/* GETS ELAPSED WALL CLOCK TIME IN SECONDS */
double omp_get_wtime(void);

/* RETURN THE MAXIMUM NUMBER OF THREADS - DEFAULT: LOGICAL THREADS */
int omp_get_max_threads();



/* =================ENVIRONMENT VARIABLES=======================*/



